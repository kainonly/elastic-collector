// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/weplanx/collector/app"
	"github.com/weplanx/collector/bootstrap"
	"github.com/weplanx/collector/common"
)

// Injectors from wire.go:

func App(value *common.Values) (*app.App, error) {
	logger, err := bootstrap.UseZap(value)
	if err != nil {
		return nil, err
	}
	conn, err := bootstrap.UseNats(value)
	if err != nil {
		return nil, err
	}
	jetStreamContext, err := bootstrap.UseJetStream(conn)
	if err != nil {
		return nil, err
	}
	objectStore, err := bootstrap.UseStore(value, jetStreamContext)
	if err != nil {
		return nil, err
	}
	inject := &common.Inject{
		Values: value,
		Log:    logger,
		Js:     jetStreamContext,
		Store:  objectStore,
	}
	appApp, err := app.New(inject)
	if err != nil {
		return nil, err
	}
	return appApp, nil
}
